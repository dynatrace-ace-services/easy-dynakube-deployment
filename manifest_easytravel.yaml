apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: easytravel
    tier: loadgen
  name: loadgen
  namespace: easytravel
spec:
  selector:
    matchLabels:
      app: easytravel
      tier: loadgen
  replicas: 1
  template:
    metadata:
      labels:
        app: easytravel
        tier: loadgen
      annotations:
        contact: "demo@dynatrace.com"
        priority: "low"
        tier: loadgen
        app: easytravel
    spec:
      containers:
      - image: dynatrace/easytravel-loadgen:2.0.0.3218
        name: loadgen
        envFrom:
        - configMapRef:
            name: easytravel-config
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
--- easytravel-mongodb
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-mongodb
  namespace: easytravel
spec:
  selector:
    matchLabels:
      app: easytravel
      tier: mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: easytravel
        tier: mongodb
      annotations:
        contact: "demo@dynatrace.com"
        priority: "high"
        tier: mongodb
        app: easytravel
    spec:
      containers:
      - image: dynatrace/easytravel-mongodb:2.0.0.3218
        name: easytravel-mongodb
        ports:
        - containerPort: 27017
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: easytravel
    tier: mongodb
  name: easytravel-mongodb
  namespace: easytravel
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: easytravel
    tier: mongodb

--- mongo-credentials
#Example - Don't source control actual secrets
apiVersion: v1
kind: Secret
metadata:
  name: mongo-credentials
  namespace: easytravel
type: Opaque
data:
  ET_DATABASE_LOCATION: ZWFzeXRyYXZlbC1tb25nb2RiOjI3MDE3Cg== #easytravel-mongodb:27017
  ET_MONGO_AUTH_DB: YWRtaW4K #admin
  ET_DATABASE_USER: ZXRBZG1pbgo= #etAdmin
  ET_DATABASE_PASSWORD: YWRtaW5hZG1pbgo= #adminadmin
--- easytravel nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-www
  namespace: easytravel
spec:
  selector:
    matchLabels:
      app: easytravel
      tier: web
  replicas: 1
  template:
    metadata:
      labels:
        app: easytravel
        tier: web
      annotations:
        contact: "demo@dynatrace.com"
        priority: "high"
        tier: web
        app: easytravel
    spec:
      containers:
      - image: dynatrace/easytravel-nginx:2.0.0.3218
        name: easytravel-www
        envFrom:
        - configMapRef:
            name: easytravel-config
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 80
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 80
        #     scheme: HTTP
        #   initialDelaySeconds: 120
        #   periodSeconds: 120
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: easytravel
    tier: web
  name: easytravel-www
  namespace: easytravel
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: easytravel
    tier: web
  type: LoadBalancer

--- easytravel-backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-backend
  namespace: easytravel
spec:
  selector:
    matchLabels:
        app: easytravel
        tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: easytravel
        tier: backend
      annotations:
        contact: "demo@dynatrace.com"
        priority: "high"
        tier: backend
        app: easytravel
    spec:
      containers:
      - image: dynatrace/easytravel-backend:2.0.0.3218
        name: easytravel-backend
        envFrom:
        - configMapRef:
            name: easytravel-config
        - secretRef:
            name: mongo-credentials
        resources:
          limits:
            cpu: 400m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        ports:
        - containerPort: 8080
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        # livenessProbe:
        #   httpGet:
        #     path: /services/JourneyService/getLocations
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 120
        #   periodSeconds: 120
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: easytravel
    tier: backend
  name: easytravel-backend
  namespace: easytravel
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: easytravel
    tier: backend
  type: ClusterIP

--- easytravel-config
apiVersion: v1
kind: ConfigMap
metadata:
  name: easytravel-config
  namespace: easytravel
data:
  ET_BACKEND_URL: http://easytravel-backend:8080
  ET_FRONTEND_URL: http://easytravel-www:80
  ET_WWW_URL: http://easytravel-www:80
  ET_FRONTEND_LOCATION: easytravel-frontend:8080
  ET_BACKEND_LOCATION: easytravel-backend:8080
  ET_PROBLEMS: DatabaseCleanup
  ET_PROBLEMS_DELAY: "0"
  ET_VISIT_NUMBER: "2"
  ET_APM_SERVER_DEFAULT: APM
  CATALINA_OPTS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=80"
--- easytravel-frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: easytravel-frontend
  namespace: easytravel
spec:
  selector:
    matchLabels:
      app: easytravel
      tier: frontend
  replicas: 1
  template:
    metadata:
      labels:
        app: easytravel
        tier: frontend
      annotations:
        contact: "demo@dynatrace.com"
        priority: "high"
        tier: frontend
        app: easytravel
    spec:
      containers:
      - image: dynatrace/easytravel-frontend:2.0.0.3218
        name: easytravel-frontend
        envFrom:
        - configMapRef:
            name: easytravel-config
        - secretRef:
            name: mongo-credentials
        ports:
        - containerPort: 8080
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: 8080
        #     scheme: HTTP
        #   initialDelaySeconds: 120
        resources:
          limits:
            cpu: 400m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: easytravel
    tier: frontend
  name: easytravel-frontend
  namespace: easytravel
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: easytravel
    tier: frontend
  type: ClusterIP
